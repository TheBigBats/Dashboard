{"t":{"$date":"2025-03-28T15:00:20.439Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2025-03-28T15:00:20.448Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2025-03-28T15:00:20.449Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":null},"version":"2.4.2","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2025-03-06T15:26:55.919Z","gitVersion":"9c6a8520534ae8990a6e72bf93f236b1776b134b","nodeVersion":"v20.18.3","opensslVersion":"3.0.15+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.35","deps":{"nodeDriverVersion":"6.14.2","libmongocryptVersion":"1.13.0","libmongocryptNodeBindingsVersion":"6.3.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2025-03-28T15:00:20.628Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000049,"ctx":"mongosh-connect","msg":"Loaded system CA list","attr":{"caCount":298,"asyncFallbackError":null,"systemCertsError":null,"messages":[]}}
{"t":{"$date":"2025-03-28T15:00:20.656Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/test?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.4.2","driver":{"name":"nodejs|mongosh","version":"6.14.2|2.4.2"},"devtoolsConnectVersion":"3.4.1","host":"127.0.0.1:27017"}}
{"t":{"$date":"2025-03-28T15:00:20.663Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2025-03-28T15:00:20.712Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2025-03-28T15:00:20.716Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2025-03-28T15:00:20.723Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2025-03-28T15:00:20.840Z"},"s":"I","c":"MONGOSH","id":1000000003,"ctx":"repl","msg":"Start loading CLI scripts"}
{"t":{"$date":"2025-03-28T15:00:20.849Z"},"s":"I","c":"MONGOSH","id":1000000012,"ctx":"shell-api","msg":"Loading file via load()","attr":{"nested":false,"filename":"/docker-entrypoint-initdb.d/init-db.js"}}
{"t":{"$date":"2025-03-28T15:00:20.862Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"try {\r\n    const status = rs.status();\r\n    print(\"Replica set already initialized.\");\r\n} catch (e) {\r\n    print(\"Initializing replica set...\");\r\n    // ‚è≥ Attendre que MongoDB se mette √† jour\r\n\r\n    rs.initiate();\r\n\r\n    sleep(5000);\r\n    (() => {\r\n        const dbName = \"DataBase\";\r\n        const collectionName = \"init\";\r\n\r\n        // Utilise une autre variable pour ne pas √©craser `db` global\r\n        const mydb = db.getSiblingDB(dbName);\r\n\r\n        if (mydb.getCollectionNames().includes(collectionName)) {\r\n            print(`‚úÖ La base '${dbName}' et la collection '${collectionName}' existent d√©j√†.`);\r\n        } else {\r\n            print(`üì¶ Cr√©ation de la base '${dbName}' avec la collection '${collectionName}'...`);\r\n            mydb[collectionName].insertOne({ initialized_at: new Date() });\r\n            print(\"‚úÖ Base initialis√©e !\");\r\n        }\r\n    })();\r\n\r\n\r\n}\r\n\r\n\r\n// pour start un r√©plica afin que airbyte le lise\r\n\r\n// Fichier : ./mongo-init/init-replica.js"}}
{"t":{"$date":"2025-03-28T15:00:20.864Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"status","class":"ReplicaSet","arguments":{}}}
{"t":{"$date":"2025-03-28T15:00:20.866Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2025-03-28T15:00:20.866Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"userId":null,"telemetryAnonymousId":"67e6b983b5e228e4d56b1409","connectionUri":"mongodb://<ip address>:27017/test?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.4.2","mongosh_version":"2.4.2","session_id":"67e6b9845cb90fd1d46b140a","is_localhost":true,"is_do_url":false,"is_atlas_url":false,"is_atlas":false,"server_version":"6.0.21","node_version":"v20.18.3","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":null,"api_version":null,"api_strict":null,"api_deprecation_errors":null,"atlas_hostname":null}}
{"t":{"$date":"2025-03-28T15:00:20.868Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"initiate","class":"ReplicaSet","arguments":{"config":{}}}}
{"t":{"$date":"2025-03-28T15:00:20.868Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2025-03-28T15:00:26.179Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"DataBase"}}}
{"t":{"$date":"2025-03-28T15:00:26.180Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getCollectionNames","class":"Database","db":"DataBase","arguments":{}}}
{"t":{"$date":"2025-03-28T15:00:26.186Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertOne","class":"Collection","db":"DataBase","coll":"init","arguments":{"options":{}}}}
{"t":{"$date":"2025-03-28T15:00:26.227Z"},"s":"I","c":"MONGOSH","id":1000000045,"ctx":"analytics","msg":"Flushed outstanding data","attr":{"flushError":"Trying to persist throttle state before userId is set","flushDuration":0}}
